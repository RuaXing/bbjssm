<?xml version="1.0" encoding="utf-8"?>  
<!DOCTYPE html-component SYSTEM "http://www.jeeweb.cn/dtd/html-component-1.0.dtd">
<html-component>
	<fragment name="fileinput-file">  
    <![CDATA[ 
        <#if showType??&&showType=='file'>
        <input  id="${path}File"  name="${path}File"  <#if multiple??&&multiple>multiple</#if> type="file" class="file-loading">
		<#else>
		   <div class="kv-avatar center-block">
		     <input  id="${path}File"  name="${path}File" type="file" class="file-loading">
		   </div>
		</#if>
		<script>
		    //删除与删除地方不能匹配，上传成功的地方需要处理下
			var ${path}FileList= new Array();
		    $(document).ready(function (){
		         <#if value??&&value!=''&&showType!='avatar'>
			      $.ajax({  
				       type : "post",  
				       url : "<#if initUrl??&&initUrl!=''>${initUrl}<#else>${adminPath}/sys/attachment/list</#if>",  
				       dataType : "json",  
				       data:{ ${idField}:'${value!}',${filepathField}:'${value!}',saveType:'${saveType}'},
				       success : function(data) { 
				          var previewJson = new Array();
				          var previewConfigJson = new Array(); 
				          var attachmentData=data.data;
				          if(attachmentData!=undefined&&attachmentData.length>0){
					          for ( var i = 0; i < attachmentData.length; i++) { 
					             var attachmentItem = attachmentData[i];   
					             ${path}FileList.push({data:attachmentItem,previewId:attachmentItem.${idField} })
					             previewJson[i]=attachmentItem.${filepathField};
					             var itemJson={caption: attachmentItem.filename, 
					             				 filename: attachmentItem.filename+"."+attachmentItem.fileext, 
					             				 size: attachmentItem.filesize, 
					             				 url: "<#if deleteUrl??&&deleteUrl!=''>${deleteUrl}<#else>${adminPath}/sys/attachment/delete</#if>", 
					             				 extra:{${idField}: attachmentItem.${idField}},
					             				 key:attachmentItem.${idField}
					            			  };
					             previewConfigJson[i]=itemJson;
					          }
				          }
				          update${path}Bind();
				          init${path}Fileinput(previewJson,previewConfigJson);
				       }
				   });
				 <#else>
				  init${path}Fileinput();
				 </#if>
			    
	         });
	         
	         function init${path}Fileinput(previewJson,previewConfigJson){
	           <#if showType??&&showType=='file'>
	           var ${path}settings={
	                language: 'zh', //设置语言
	                maxFileSize: ${maxFileSize},
	                theme:'${theme!}',
	                browseLabel:'${buttonText}',
	                uploadUrl: "<#if uploadUrl??&&uploadUrl!=''>${uploadUrl}<#else>${adminPath}/sys/attachment/upload</#if>", //上传的地址
	                allowedFileExtensions: [<#if extend??&&extend!=''>${extend}</#if>],//接收的文件后缀
	                uploadAsync: true, //默认异步上传
	                showUpload: true, //是否显示上传按钮
	                showRemove : true, //显示移除按钮
	                showPreview : true, //是否显示预览
	                showCaption: ${showCaption?string("true","false")},//是否显示标题
	                browseClass: "btn btn-primary", //按钮样式     
	                dropZoneEnabled: ${dropZoneEnabled?string("true","false")},//是否显示拖拽区域
	                maxFileCount: ${maxFileCount}, //表示允许同时上传的最大文件个数
	                enctype: 'multipart/form-data',
	                validateInitialCount:true,
	                uploadExtraData: ${path}uploadExtraData,
	                msgFilesTooMany: "选择上传的文件数量({n}) 超过允许的最大数值{m}！",
	                overwriteInitial: false, //重载文件不会消失
	                initialPreviewShowDelete:true,  
	                initialPreview: previewJson,
				    initialPreviewAsData: true, // defaults markup
				    initialPreviewFileType: 'image', // image is the default and can be overridden in config below
				    initialPreviewConfig: previewConfigJson,
				    preferIconicPreview: true, // this will force thumbnails to display icons for following file extensions
				    previewFileIcon: '<i class="fa fa-file"></i>',
	                preferIconicZoomPreview: true,
	                previewFileIconSettings: { // configure your icon file extensions
				        'doc': '<i class="fa fa-file-word-o text-primary"></i>',
				        'xls': '<i class="fa fa-file-excel-o text-success"></i>',
				        'ppt': '<i class="fa fa-file-powerpoint-o text-danger"></i>',
				        'pdf': '<i class="fa fa-file-pdf-o text-danger"></i>',
				        'zip': '<i class="fa fa-file-archive-o text-muted"></i>',
				        'htm': '<i class="fa fa-file-code-o text-info"></i>',
				        'txt': '<i class="fa fa-file-text-o text-info"></i>',
				        'mov': '<i class="fa fa-file-movie-o text-warning"></i>',
				        'mp3': '<i class="fa fa-file-audio-o text-warning"></i>',
				       //'jpg': '<i class="fa fa-file-photo-o text-danger"></i>', 
				        //'gif': '<i class="fa fa-file-photo-o text-warning"></i>', 
				        //'png': '<i class="fa fa-file-photo-o text-primary"></i>'    
				    },
				    previewFileExtSettings: { // configure the logic for determining icon file extensions
				        'doc': function(ext) {
				            return ext.match(/(doc|docx)$/i);
				        },
				        'xls': function(ext) {
				            return ext.match(/(xls|xlsx)$/i);
				        },
				        'ppt': function(ext) {
				            return ext.match(/(ppt|pptx)$/i);
				        },
				        'zip': function(ext) {
				            return ext.match(/(zip|rar|tar|gzip|gz|7z)$/i);
				        },
				        'htm': function(ext) {
				            return ext.match(/(htm|html)$/i);
				        },
				        'txt': function(ext) {
				            return ext.match(/(txt|ini|csv|java|php|js|css)$/i);
				        },
				        'mov': function(ext) {
				            return ext.match(/(avi|mpg|mkv|mov|mp4|3gp|webm|wmv)$/i);
				        },
				        'mp3': function(ext) {
				            return ext.match(/(mp3|wav)$/i);
				        },
				    },
	            };
	            <#else>
	            var ${path}settings={
	                language: 'zh', //设置语言
	                overwriteInitial: true,
				    maxFileSize: ${maxFileSize},
				    showClose: false,
				    showCaption: false,
				    browseLabel:'${buttonText}',
	                uploadUrl: "<#if uploadUrl??&&uploadUrl!=''>${uploadUrl}<#else>${adminPath}/sys/attachment/upload</#if>", //上传的地址
	                allowedFileExtensions: [<#if extend??&&extend!=''>${extend}</#if>],//接收的文件后缀
	                uploadAsync: true, //默认异步上传
	                showUpload: true, //是否显示上传按钮
	                showRemove : true, //显示移除按钮
	                showPreview : true, //是否显示预览 
	       			browseLabel: '',
				    removeLabel: '',
				    browseIcon: '<i class="glyphicon glyphicon-folder-open"></i>',
				    removeIcon: '<i class="glyphicon glyphicon-remove"></i>',
				    removeTitle: 'Cancel or reset changes',
				    elErrorContainer: '#kv-avatar-errors-1',
				    msgErrorClass: 'alert alert-block alert-danger',
				    preferIconicPreview: true, 
				    defaultPreviewContent: '<img style="widht:${fileInputWidth};height:${fileInputHeight};" src="<#if value??&&value!=''>${ctx}/${value!}<#else>${staticPath}/common/img/default_avatar_male.jpg</#if>"  />',
	            };
	            </#if>
	            
	            <#if fileInputSettingCallback??&&fileInputSettingCallback!=''>
	             $.extend(${path}settings, typeof ${fileInputSettingCallback} == "function" &&${fileInputSettingCallback}());
	             <#else>
	             $.extend(${path}settings, ${fileInputSetting});
	             </#if>
		         $("#${path}File").fileinput(${path}settings);
		        
	         }
	         
	         function ${path}uploadExtraData(){
	             var uploadExtraData=<#if uploadExtraData??&&uploadExtraData!=''>${uploadExtraData}<#else>{}</#if>;
	             <#if uploadExtraFieldData??&&uploadExtraFieldData!=''>
	                  var uploadExtraFieldData='${uploadExtraFieldData}';
	                  var uploadExtraFieldDatas=uploadExtraFieldData.split(",");
	                  uploadExtraFieldDatas.forEach(function(key, index ) {
					      var val=$('#' + key).val();
					      uploadExtraData[key] = val;
					  });
	             </#if>
	             return uploadExtraData;
	         }
	         <#if autoUpload??&&autoUpload>
	         $("#${path}File").on("filebatchselected", function(event, files) {
		            $(this).fileinput("upload");
		     });
		     </#if>
		   
			 //异步上传返回结果处理
			 $("#${path}File").on("fileuploaded", function (event, data, previewId, index) {
			     <#if showType??&&showType=='avatar'>
			     ${path}FileList.splice(0,${path}FileList.length);
			     </#if>
			     ${path}uploadsuccess(event, data, previewId, index);
			 });
			 
			 
			 //同步上传返回结果处理
			 $("#${path}File").on("filebatchuploadsuccess", function (event, data, previewId, index) {
			     <#if showType??&&showType=='avatar'>
			     ${path}FileList.splice(0,${path}FileList.length);
			     </#if>
			      ${path}uploadsuccess(event, data, previewId, index);
			 });
			 
			 
			 function ${path}uploadsuccess(event, data, previewId, index){
			 		var response=data.response;
			        ${path}FileList.push({data:response.data[0],previewId:previewId })
			        
			        <#if uploadSuccessCallback??&&uploadSuccessCallback!=''>
			             ${uploadSuccessCallback}(response);
			        </#if>
			        update${path}Bind();
			 }
			 
			 function update${path}Bind(){
			       var fileids="";
			       for (var i = 0; i < ${path}FileList.length; i++) {
			      		<#if saveType??&&saveType=='1'>
				        var fileid= ${path}FileList[i].data.${idField};
				        <#else>
				        var fileid= ${path}FileList[i].data.${filepathField};
				        </#if>
				        if(fileids!=''){
				          fileids+=",";
				        }
				        fileids+=fileid;
				   }
				    $('#${path}').val(fileids);
				    try{
			        <#if refreshCallback??&&refreshCallback!=''>
			             typeof ${refreshCallback} == "function" &&${refreshCallback}(${path}FileList);
			        </#if>
			        }catch(err)
   					{
   					  
   					}
			 }
			 
			 //删除回调
			 $("#${path}File").on('filesuccessremove', function(event, id) {
			      for (var i = 0; i < ${path}FileList.length; i++) { 
				      if (${path}FileList[i].previewId== id) {
				        var fileid= ${path}FileList[i].data.${idField};
				        ${path}FileList.splice(i,1); 
				        $.post("<#if deleteUrl??&&deleteUrl!=''>${deleteUrl}<#else>${adminPath}/sys/attachment/delete</#if>",{${idField}:fileid});
				      } 
				   }
				   update${path}Bind();
			 });
			 
			 //预览删除
			 $("#${path}File").on('filedeleted', function(event, id, jqXHR, data) {
			       alert(id);
			       for (var i = 0; i < ${path}FileList.length; i++) { 
				      if (${path}FileList[i].previewId== id) {
				        var fileid= ${path}FileList[i].data.${idField};
				        ${path}FileList.splice(i,1); 
				      } 
				   }
				   update${path}Bind();
			 });
			 
			//清除所有的
			$("#${path}File").on('fileclear', function(event) {
			    var fileids="";
				for (var i = 0; i < ${path}FileList.length; i++) { 
			        var fileid= ${path}FileList[i].data.${idField};
			        if(fileids!=''){
			          fileids+=",";
			        }
			        fileids+=fileid;
				}
				if(fileids!=''){
				   $.post("<#if deleteUrl??&&deleteUrl!=''>${deleteUrl}<#else>${adminPath}/sys/attachment/delete</#if>",{${idField}:fileids});
				}
				${path}FileList.splice(0,${path}FileList.length);
				update${path}Bind();
			});
			  
	    </script> 
    ]]>
	</fragment>

</html-component>  